{"version":3,"sources":["index.js","spectreport-reporter.min.js","util.js","classes/stats.js","classes/suite.js","classes/test.js"],"names":["Spec","runner","options","opts","reporterOptions","screenshotDir","defaults","outputDir","storyDir","curSuite","storyPath","suite","file","_splitPath","splitPath","_splitPath2","_slicedToArray","outputPath","outputFilename","console","specReporter","screenshot","on","test","Suite","start","stop","parent","addSuite","addTest","Test","TEST_PENDING","TEST_PASS","err","TEST_FAIL","jsonFilename","replace","stream","fs","createWriteStream","write","JSON","stringify","end","dir","filename","title","screenshotPath","browser","takeScreenshot","then","png","Buffer","haystack","search","relative","split","tokens","pop","path","join","_interopRequire","obj","__esModule","arr","i","Array","isArray","Symbol","iterator","Object","_step","_arr","_iterator","next","done","push","value","length","TypeError","require","reporters","_util","module","exports","defineProperty","_createClass","defineProperties","target","props","key","prop","configurable","writable","Constructor","protoProps","staticProps","prototype","_classCallCheck","instance","Stats","tests","undefined","arguments","pending","failures","duration","this","timeStart","timeStop","add","stats","suites","addStats","hasTests","status","Date","now","Math","round","toJSON","clone","assign","_this","fullTitle","error","getOwnPropertyNames","forEach"],"mappings":"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","file":"spectreport-reporter.min.js","sourcesContent":["const fs = require('fs-extra');\n\n/**\n * Module dependencies.\n */\nconst specReporter = require('mocha').reporters.Spec;\n\nimport {screenshot, splitPath} from './util';\nimport Suite from './classes/suite';\nimport Test from './classes/test';\n\n/**\n * Default values\n */\nconst defaults = {\n    screenshotDir: 'test/screenshot',\n    outputDir: 'test/output',\n    storyDir: 'test/stories'\n};\n\n/**\n * Initialize a new `Spec` test reporter.\n *\n * @param {Runner} runner\n * @api public\n */\nfunction Spec(runner, options) {\n    const opts = options.reporterOptions || {};\n\n    // Handle options and setup defaults\n    opts.screenshotDir = opts.screenshotDir || defaults.screenshotDir;\n    opts.outputDir = opts.outputDir || defaults.outputDir;\n    opts.storyDir = opts.storyDir || defaults.storyDir;\n\n    let curSuite = null;\n\n    const storyPath = runner.suite.file;\n\n    const [outputPath, outputFilename] = splitPath(storyPath,\n        opts.storyDir, opts.outputDir);\n\n    // Handle console output if requested, pass through to Spec reporter.\n    if (opts.console) {\n        specReporter(runner, options);\n    }\n\n    // Take screenshots of failed tests if requested\n    if (opts.screenshot) {\n        runner.on('fail', test => {\n            screenshot(test, opts.screenshotDir);\n        });\n    }\n\n    // Handle JSON output\n\n    runner.on('suite', suite => {\n        curSuite = new Suite(suite, curSuite);\n        curSuite.start();\n    });\n\n    runner.on('suite end', () => {\n        curSuite.stop();\n\n        if (curSuite.parent) {\n            curSuite.parent.addSuite(curSuite);\n            curSuite = curSuite.parent;\n        }\n    });\n\n    runner.on('pending', test => {\n        curSuite.addTest(new Test(test, Test.TEST_PENDING));\n    });\n\n    runner.on('pass', test => {\n        curSuite.addTest(new Test(test, Test.TEST_PASS));\n    });\n\n    runner.on('fail', (test, err) => {\n        curSuite.addTest(new Test(test, Test.TEST_FAIL, err));\n    });\n\n    runner.on('end', () => {\n        curSuite.stop(); // End the current suite again.\n\n        let jsonFilename = outputFilename.replace('.js', '.json');\n\n        let stream = fs.createWriteStream(outputPath + '/' + jsonFilename);\n        stream.write(JSON.stringify(curSuite, null, 2));\n        stream.end();\n    });\n}\n\nexport default Spec;\n",null,"const fs = require('fs-extra');\n\n/**\n * Takes a screenshot of a failed test and returns the relative path\n * to that screenshot.  Note that this expects a browser object for protractor\n * and naively assumes that the screenshots directory exists.\n *\n * @param {Object} test\n * @return \"String\" screenshotPath\n * @api private\n */\n\nexport function screenshot(test, dir) {\n    let filename = (test.parent.title + ' ' + test.title).replace(/\\W+/g, '_') + '.png';\n    let screenshotPath = `${dir}/${filename}`;\n\n    /*global browser*/\n    browser.takeScreenshot().then(png => {\n        let stream = fs.createWriteStream(screenshotPath);\n\n        stream.write(new Buffer(png, 'base64'));\n        stream.end();\n    });\n\n    return screenshotPath;\n}\n\n/**\n * Starting from haystack in the path, clear everything up to and including\n * the search string, then prepend the replace string, and return a path and\n * a filename\n *\n * @param \"String\" haystack\n * @param \"String\" search\n * @param \"String\" replace\n * @return \"String\",\"String\" relativePath, filename\n * @api private\n */\n\nexport function splitPath(haystack, search, replace) {\n    let relative = replace + haystack.split(search)[1];\n    let tokens = relative.split('/');\n    let filename = tokens.pop();\n    let path = tokens.join('/');\n\n    return [path, filename];\n}\n","class Stats {\n    constructor(tests = 0, pending = 0, failures = 0, duration = 0) {\n        this.tests = tests;\n        this.pending = pending;\n        this.failures = failures;\n        this.duration = duration;\n        this.timeStart = null;\n        this.timeStop = null;\n    }\n    add(stats) {\n        this.tests += stats.tests;\n        this.pending += stats.pending;\n        this.failures += stats.failures;\n    }\n}\n\nexport default Stats;\n","import Stats from './stats';\nimport Test from './test';\n\nclass Suite {\n    constructor(suite, parent) {\n        this.title = suite.title;\n        this.suites = [];\n        this.tests = [];\n        this.parent = parent;\n        this.stats = new Stats();\n    }\n    addStats(stats) {\n        this.stats.add(stats);\n    }\n    addSuite(suite) {\n        if (!suite.hasTests()) {\n            return false;\n        }\n        this.suites.push(suite);\n        this.addStats(suite.stats);\n    }\n    addTest(test) {\n        this.tests.push(test);\n        this.stats.tests++;\n\n        if (test.status === Test.TEST_PENDING) {\n            this.stats.pending++;\n        }\n        else if (test.status === Test.TEST_FAIL) {\n            this.stats.failures++;\n        }\n    }\n    hasTests() {\n        return (this.tests.length > 0);\n    }\n    start () {\n        this.stats.timeStart = Date.now();\n    }\n    stop () {\n        if(!this.stats.timeStart > 0) {\n            return false;\n        }\n        this.stats.timeStop = Date.now();\n        this.stats.duration = Math.round((this.stats.timeStop - this.stats.timeStart) / 10) / 100;\n    }\n    toJSON() {\n        var clone = Object.assign({}, this);\n        clone.parent = undefined;\n        return clone;\n    }\n}\n\nexport default Suite;\n","class Test {\n    constructor(test, status, err) {\n        this.status = status;\n        this.title = test.title;\n        this.fullTitle = test.fullTitle();\n        this.duration = Math.round(test.duration / 10) / 100;\n        this.error = null;\n\n        if(err) {\n            this.error = {};\n            Object.getOwnPropertyNames(err).forEach(key => {\n                this.error[key] = err[key];\n            });\n        }\n    };\n}\n\nTest.TEST_PENDING = 2;\nTest.TEST_PASS = 1;\nTest.TEST_FAIL = 0;\n\nexport default Test;\n"],"sourceRoot":"/source/"}