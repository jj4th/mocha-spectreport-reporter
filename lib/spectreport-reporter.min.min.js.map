{"version":3,"file":"spectreport-reporter.min.js","sources":["spectreport-reporter.min.js","/source/spectreport-reporter.min.js"],"names":["global","factory","exports","module","require","define","amd","clsses_test","this","Spec","runner","options","indent","Array","indents","join","opts","reporterOptions","Base","call","screenshotDir","defaults","outputDir","storyDir","self","curSuite","storyPath","suite","suites","file","util","splitPath","outputPath","_util$splitPath2","outputFilename","console","failures","on","log","color","title","test","fmt","speed","symbols","ok","duration","epilogue","bind","screenshot","classes_suite","start","end","parent","addSuite","addTest","TEST_PENDING","TEST_PASS","TEST_FAIL","jsonFilename","replace","fs","mkdirs","err","error","stream","createWriteStream","write","JSON","stringify","Stats","tests","undefined","arguments","pending","timeStart","timeStop","add","stats","Date","now","stop","Math","round","classes_stats","Test","status","fullTitle","Object","getOwnPropertyNames","forEach","key","_this","classes_test","Suite","addStats","hasTests","push","passes","length","toJSON","clone","assign"],"mappings":"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","sourceRoot":"/source/","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(require('clsses/test')) :\n    typeof define === 'function' && define.amd ? define(['clsses/test'], factory) :\n    factory(global.clsses_test)\n}(this, function (clsses_test) { 'use strict';\n\n    class Stats {\n        constructor(tests = 0, pending = 0, failures = 0, duration = 0) {\n            this.tests = tests;\n            this.pending = pending;\n            this.failures = failures;\n            this.duration = duration;\n            this.timeStart = null;\n            this.timeStop = null;\n        }\n        add(stats) {\n            this.tests += stats.tests;\n            this.pending += stats.pending;\n            this.failures += stats.failures;\n        }\n        start() {\n            this.timeStart = Date.now();\n        }\n        stop () {\n            this.timeStop = Date.now();\n            this.duration = Math.round((this.timeStop - this.timeStart) / 10) / 100;\n        }\n    }\n\n    var classes_stats = Stats;\n\n    class Test {\n        constructor(test, status) {\n            this.status = status;\n            this.title = test.title;\n            this.fullTitle = test.fullTitle();\n            this.duration = test.duration;\n\n            // Make sure we only keep error properties\n            Object.getOwnPropertyNames(test.err).forEach(key => {\n                this.error[key] = test.err[key];\n            });\n        };\n    }\n\n    Test.TEST_PENDING = 2;\n    Test.TEST_PASS = 1;\n    Test.TEST_FAIL = 0;\n\n    var classes_test = Test;\n\n    class Suite {\n        constructor(suite, parent) {\n            this.suites = [];\n            this.tests = [];\n            this.parent = parent;\n            this.stats = new classes_stats();\n        }\n        addStats(stats) {\n            this.stats.add(stats);\n        }\n        addSuite(suite) {\n            if (!suite.hasTests()) {\n                return false;\n            }\n            this.suites.push(suite);\n            this.addStats(suite.stats);\n        }\n        addTest(test) {\n            this.tests.push(test);\n            if (test.status === classes_test.TEST_PENDING) {\n                this.stats.pending++;\n            }\n            else if (test.status === classes_test.TEST_PASS) {\n                this.stats.passes++;\n            }\n            else if (test.status === classes_test.TEST_FAIL) {\n                this.stats.failures++;\n            }\n        }\n        hasTests() {\n            return (this.tests.length > 1);\n        }\n        start() {\n            this.stats.start();\n        }\n        stop() {\n            this.stats.stop();\n        }\n        toJSON() {\n            var clone = Object.assign({}, this);\n            clone.parent = undefined;\n            return clone;\n        }\n    }\n\n    var classes_suite = Suite;\n\n    /* jshint ignore:start */\n    const fs = require('fs-extra');\n    const util = require('util');\n\n    /**\n     * Module dependencies.\n     */\n\n    const Base = require('./node_modules/mocha/lib/reporters/base');\n    const color = Base.color;\n\n    const defaults = {\n        screenshotDir: 'test/screenshot',\n        outputDir: 'test/results',\n        storyDir: 'test/stories'\n    };\n\n    /**\n     * Initialize a new `Spec` test reporter.\n     *\n     * @param {Runner} runner\n     * @api public\n     */\n    function Spec(runner, options) {\n        const opts = options.reporterOptions || {};\n        Base.call(this, runner);\n\n        // Handle options and setup defaults\n        opts.screenshotDir = opts.screenshotDir || defaults.screenshotDir;\n        opts.outputDir = opts.outputDir || defaults.outputDir;\n        opts.storyDir = opts.storyDir || defaults.storyDir;\n\n        const self = this;\n        let indents = 0;\n        let curSuite = null;\n\n        const storyPath = runner.suite.suites[0].file;\n\n        const [outputPath, outputFilename] = util.splitPath(storyPath, opts.storyDir, opts.outputDir);\n\n        function indent() {\n            return Array(indents).join('  ');\n        }\n\n        // Handle console output if requested\n        if (opts.console) {\n            let failures = 0;\n            runner.on('start', () => {\n                console.log();\n            });\n\n            runner.on('suite', suite => {\n                ++indents;\n                console.log(color('suite', '%s%s'), indent(), suite.title);\n            });\n\n            runner.on('suite end', () => {\n                --indents;\n                if (indents === 1) {\n                    console.log();\n                }\n            });\n\n            runner.on('pending', test => {\n                let fmt = indent() + color('pending', '  - %s');\n                console.log(fmt, test.title);\n            });\n\n            runner.on('pass', test => {\n                if (test.speed === 'fast') {\n                    let fmt = indent()+ color('checkmark', '  ' + Base.symbols.ok) + color('pass', ' %s ');\n                    console.log(fmt, test.title);\n                } else {\n                    // jshint maxlen:150\n                    let fmt = indent() + color('checkmark', '  ' + Base.symbols.ok) + color('pass', ' %s ') + color(test.speed, '(%dms)');\n                    console.log(fmt, test.title, test.duration);\n                }\n            });\n\n            runner.on('fail', test => {\n                console.log(indent() + color('fail', '  %d) %s'), ++failures, test.title);\n            });\n\n            runner.on('end', self.epilogue.bind(self));\n        }\n\n        // Take screenshots of failed tests if requested\n        if (opts.screenshot) {\n            runner.on('end', () => {\n                util.screenshot(test, opts.screenshotDir);\n            });\n        }\n\n        // Handle JSON output\n\n        runner.on('suite', suite => {\n            curSuite = new classes_suite(suite, curSuite);\n            curSuite.start();\n        });\n\n        runner.on('suite end', () => {\n            curSuite.end();\n\n            if (curSuite.parent) {\n                curSuite.parent.addSuite(curSuite);\n                curSuite = curSuite.parent;\n            }\n        });\n\n        runner.on('pending', test => {\n            curSuite.addTest(new clsses_test(test, clsses_test.TEST_PENDING));\n        });\n\n        runner.on('pass', test => {\n            curSuite.addTest(new clsses_test(test, clsses_test.TEST_PASS));\n        });\n\n        runner.on('fail', test => {\n            curSuite.addTest(new clsses_test(test, clsses_test.TEST_FAIL));\n        });\n\n        runner.on('end', function(){\n            curSuite.end(); // End the current suite again.\n\n            let jsonFilename = outputFilename.replace('.js', '.json');\n            fs.mkdirs(outputPath, function(err) {\n                if (err) {\n                    return console.error(err);\n                }\n\n                let stream = fs.createWriteStream(outputFilename + '/' + jsonFilename);\n                stream.write(JSON.stringify(curSuite, null, 2));\n                stream.end();\n            });\n        });\n    }\n\n    exports = module.exports = Spec;\n    /* jshint ignore:end */\n\n}));\n","(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(require('clsses/test')) :\n    typeof define === 'function' && define.amd ? define(['clsses/test'], factory) :\n    factory(global.clsses_test)\n}(this, function (clsses_test) { 'use strict';\n\n    class Stats {\n        constructor(tests = 0, pending = 0, failures = 0, duration = 0) {\n            this.tests = tests;\n            this.pending = pending;\n            this.failures = failures;\n            this.duration = duration;\n            this.timeStart = null;\n            this.timeStop = null;\n        }\n        add(stats) {\n            this.tests += stats.tests;\n            this.pending += stats.pending;\n            this.failures += stats.failures;\n        }\n        start() {\n            this.timeStart = Date.now();\n        }\n        stop () {\n            this.timeStop = Date.now();\n            this.duration = Math.round((this.timeStop - this.timeStart) / 10) / 100;\n        }\n    }\n\n    var classes_stats = Stats;\n\n    class Test {\n        constructor(test, status) {\n            this.status = status;\n            this.title = test.title;\n            this.fullTitle = test.fullTitle();\n            this.duration = test.duration;\n\n            // Make sure we only keep error properties\n            Object.getOwnPropertyNames(test.err).forEach(key => {\n                this.error[key] = test.err[key];\n            });\n        };\n    }\n\n    Test.TEST_PENDING = 2;\n    Test.TEST_PASS = 1;\n    Test.TEST_FAIL = 0;\n\n    var classes_test = Test;\n\n    class Suite {\n        constructor(suite, parent) {\n            this.suites = [];\n            this.tests = [];\n            this.parent = parent;\n            this.stats = new classes_stats();\n        }\n        addStats(stats) {\n            this.stats.add(stats);\n        }\n        addSuite(suite) {\n            if (!suite.hasTests()) {\n                return false;\n            }\n            this.suites.push(suite);\n            this.addStats(suite.stats);\n        }\n        addTest(test) {\n            this.tests.push(test);\n            if (test.status === classes_test.TEST_PENDING) {\n                this.stats.pending++;\n            }\n            else if (test.status === classes_test.TEST_PASS) {\n                this.stats.passes++;\n            }\n            else if (test.status === classes_test.TEST_FAIL) {\n                this.stats.failures++;\n            }\n        }\n        hasTests() {\n            return (this.tests.length > 1);\n        }\n        start() {\n            this.stats.start();\n        }\n        stop() {\n            this.stats.stop();\n        }\n        toJSON() {\n            var clone = Object.assign({}, this);\n            clone.parent = undefined;\n            return clone;\n        }\n    }\n\n    var classes_suite = Suite;\n\n    /* jshint ignore:start */\n    const fs = require('fs-extra');\n    const util = require('util');\n\n    /**\n     * Module dependencies.\n     */\n\n    const Base = require('./node_modules/mocha/lib/reporters/base');\n    const color = Base.color;\n\n    const defaults = {\n        screenshotDir: 'test/screenshot',\n        outputDir: 'test/results',\n        storyDir: 'test/stories'\n    };\n\n    /**\n     * Initialize a new `Spec` test reporter.\n     *\n     * @param {Runner} runner\n     * @api public\n     */\n    function Spec(runner, options) {\n        const opts = options.reporterOptions || {};\n        Base.call(this, runner);\n\n        // Handle options and setup defaults\n        opts.screenshotDir = opts.screenshotDir || defaults.screenshotDir;\n        opts.outputDir = opts.outputDir || defaults.outputDir;\n        opts.storyDir = opts.storyDir || defaults.storyDir;\n\n        const self = this;\n        let indents = 0;\n        let curSuite = null;\n\n        const storyPath = runner.suite.suites[0].file;\n\n        const [outputPath, outputFilename] = util.splitPath(storyPath, opts.storyDir, opts.outputDir);\n\n        function indent() {\n            return Array(indents).join('  ');\n        }\n\n        // Handle console output if requested\n        if (opts.console) {\n            let failures = 0;\n            runner.on('start', () => {\n                console.log();\n            });\n\n            runner.on('suite', suite => {\n                ++indents;\n                console.log(color('suite', '%s%s'), indent(), suite.title);\n            });\n\n            runner.on('suite end', () => {\n                --indents;\n                if (indents === 1) {\n                    console.log();\n                }\n            });\n\n            runner.on('pending', test => {\n                let fmt = indent() + color('pending', '  - %s');\n                console.log(fmt, test.title);\n            });\n\n            runner.on('pass', test => {\n                if (test.speed === 'fast') {\n                    let fmt = indent()+ color('checkmark', '  ' + Base.symbols.ok) + color('pass', ' %s ');\n                    console.log(fmt, test.title);\n                } else {\n                    // jshint maxlen:150\n                    let fmt = indent() + color('checkmark', '  ' + Base.symbols.ok) + color('pass', ' %s ') + color(test.speed, '(%dms)');\n                    console.log(fmt, test.title, test.duration);\n                }\n            });\n\n            runner.on('fail', test => {\n                console.log(indent() + color('fail', '  %d) %s'), ++failures, test.title);\n            });\n\n            runner.on('end', self.epilogue.bind(self));\n        }\n\n        // Take screenshots of failed tests if requested\n        if (opts.screenshot) {\n            runner.on('end', () => {\n                util.screenshot(test, opts.screenshotDir);\n            });\n        }\n\n        // Handle JSON output\n\n        runner.on('suite', suite => {\n            curSuite = new classes_suite(suite, curSuite);\n            curSuite.start();\n        });\n\n        runner.on('suite end', () => {\n            curSuite.end();\n\n            if (curSuite.parent) {\n                curSuite.parent.addSuite(curSuite);\n                curSuite = curSuite.parent;\n            }\n        });\n\n        runner.on('pending', test => {\n            curSuite.addTest(new clsses_test(test, clsses_test.TEST_PENDING));\n        });\n\n        runner.on('pass', test => {\n            curSuite.addTest(new clsses_test(test, clsses_test.TEST_PASS));\n        });\n\n        runner.on('fail', test => {\n            curSuite.addTest(new clsses_test(test, clsses_test.TEST_FAIL));\n        });\n\n        runner.on('end', function(){\n            curSuite.end(); // End the current suite again.\n\n            let jsonFilename = outputFilename.replace('.js', '.json');\n            fs.mkdirs(outputPath, function(err) {\n                if (err) {\n                    return console.error(err);\n                }\n\n                let stream = fs.createWriteStream(outputFilename + '/' + jsonFilename);\n                stream.write(JSON.stringify(curSuite, null, 2));\n                stream.end();\n            });\n        });\n    }\n\n    exports = module.exports = Spec;\n    /* jshint ignore:end */\n\n}));\n"]}